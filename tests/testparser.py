from __future__ import print_function

import unittest
import numpy as np
import ifqi.utils.parser as parser


res = [[0,0,2,0,-0.1041864182,-1.041864182,0],
[-0.1041864182,-1.041864182,0,0,-0.1301168787,-0.259304605,0],
[-0.1301168787,-0.259304605,1,0, -0.1635899012,-0.3347302251,0],
[-0.1635899012,-0.3347302251,2,0,-0.3075921583,-1.440022571,0],
[-0.3075921583,-1.440022571,1,0,-0.5176662559,-2.100740976,0],
[-0.5176662559,-2.100740976,1,0,-0.8006804058,-2.830141499,0],
[-0.8006804058,-2.830141499,2,0,-1.2371179,-4.364374939,0],
[-1.2371179,-4.364374939,0,-1,-1.782373097,-5.452551972,1],
[0,0,0,0,0.0899214602,0.899214602,0],
[0.0899214602,0.899214602,2,0,0.09252581172,0.02604351513,0],
[0.09252581172,0.02604351513,1,0,0.1163559805,0.2383016875,0],
[0.1163559805,0.2383016875,2,0,0.07712748282,-0.3922849765,0],
[0.07712748282,-0.3922849765,1,0,0.06388537448,-0.1324210835,0],
[0.06388537448,-0.1324210835,0,0,0.1634672545,0.9958187998,0],
[0.1634672545,0.9958187998,1,0,0.2941476875,1.306804331,0],
[0.2941476875,1.306804331,1,0,0.4580831696,1.63935482,0],
[0.4580831696,1.63935482,2,0,0.6054357388,1.473525693,0],
[0.6054357388,1.473525693,0,0,0.9112615192,3.058257804,0],
[0.9112615192,3.058257804,1,0,1.334056149,4.227946293,0],
[1.334056149,4.227946293,2,-1,1.877816872,5.437607238,1]]

res2 = [[0,0,2,0,0,0,-0.1041864182,-1.041864182,0],
[-0.1041864182,-1.041864182,0,1,0,-1,-0.1301168787,-0.259304605,0],
[-0.1301168787,-0.259304605,1,2,0,-2, -0.1635899012,-0.3347302251,0],
[-0.1635899012,-0.3347302251,2,3,0,-3,-0.3075921583,-1.440022571,0],
[-0.3075921583,-1.440022571,1,4,0,-4,-0.5176662559,-2.100740976,0],
[-0.5176662559,-2.100740976,1,5,0,-5,-0.8006804058,-2.830141499,0],
[-0.8006804058,-2.830141499,2,6,0,-6,-1.2371179,-4.364374939,0],
[-1.2371179,-4.364374939,0,7,-1,-7,-1.782373097,-5.452551972,1],
       [1,2,3,4,5,6,9,8,1]]


class TestParsers(unittest.TestCase):

    def testreleparser(self):

        data, sdim, adim, rdim = parser.parseReLeDataset('data_prova.txt')

        self.assertTrue(sdim == 2)
        self.assertTrue(adim == 1)
        self.assertTrue(rdim == 1)

        i = 0
        for el in data:
            self.assertTrue(np.allclose(el, res[i]), '{} != {}'.format(el.tolist(), res[i]))
            i += 1
        self.assertTrue(data.shape[0] == len(res))
        self.assertTrue(data.shape[1] == len(res[0]))

    def testreleparser2(self):

        data, sdim, adim, rdim = parser.parseReLeDataset('data_prova2.txt')

        self.assertTrue(sdim == 2)
        self.assertTrue(adim == 2)
        self.assertTrue(rdim == 2)

        i = 0
        for el in data:
            self.assertTrue(np.allclose(el, res2[i]), '{} != {}'.format(el.tolist(), res[i]))
            i += 1
        self.assertTrue(data.shape[0] == len(res2))
        self.assertTrue(data.shape[1] == len(res2[0]))


if __name__ == '__main__':
    unittest.main()